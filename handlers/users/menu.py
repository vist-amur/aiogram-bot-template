from aiogram import types
from aiogram.types import ReplyKeyboardMarkup
from aiogram.dispatcher.filters import Command
from keyboards.default import menu
from loader import dp
from utils.misc import get_addr1c
import asyncio


@dp.message_handler(Command("menu"))
async def show_menu(message: types.Message):
    await message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=menu)


@dp.message_handler(text='–ù–∞—à –∞–¥—Ä–µ—Å üì®')
async def get_addr1ch(message: types.Message):
    await dp.bot.send_message(message.chat.id, "–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...")
    await asyncio.sleep(3)
    await message.answer(get_addr1c.get_addr1c_brome())


@dp.message_handler(text='–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã ‚è∞')
async def get_addr1ch(message: types.Message):
    await dp.bot.send_message(message.chat.id, "–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...")
    await asyncio.sleep(3)
    await message.answer(get_addr1c.get_clock_1c_brome())


@dp.message_handler(text='–ù–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã üìÑ')
async def get_addr1ch(message: types.Message):
    await dp.bot.send_message(message.chat.id, "–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...")
    await asyncio.sleep(3)
    info = get_addr1c.get_requisites_1c_brome()

    await message.answer(info.replace("*", "\r\n"))

@dp.message_handler(text='–ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏ üìâ')
async def get_sales(message: types.Message):
    await dp.bot.send_message(message.chat.id, "–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...")
    await asyncio.sleep(3)
    info = get_addr1c.get_discounts_1c_brome()
    if len(info) == 0:
        await message.answer('–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!')
        return
    for i, y in enumerate(info):
        istr = f'{y["–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞"]}, –ê—Ä—Ç–∏–∫—É–ª: {y["–ê—Ä—Ç–∏–∫—É–ª"]}, –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {y["–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞"]}, –ù–æ–≤–∞—è —Ü–µ–Ω–∞: {y["–ù–æ–≤–∞—è —Ü–µ–Ω–∞"]},' \
               f'–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–∫—Ü–∏–∏: {y["–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–∫—Ü–∏–∏"]}'
        await message.answer(istr)

